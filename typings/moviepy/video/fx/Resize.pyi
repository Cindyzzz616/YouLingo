"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Union
from moviepy.Effect import Effect

@dataclass
class Resize(Effect):
    """Effect returning a video clip that is a resized version of the clip.

    Parameters
    ----------

    new_size : tuple or float or function, optional
        Can be either
        - ``(width, height)`` in pixels or a float representing
        - A scaling factor, like ``0.5``.
        - A function of time returning one of these.

    height : int, optional
        Height of the new clip in pixels. The width is then computed so
        that the width/height ratio is conserved.

    width : int, optional
        Width of the new clip in pixels. The height is then computed so
        that the width/height ratio is conserved.

    Examples
    --------

    .. code:: python

        clip.with_effects([vfx.Resize((460,720))]) # New resolution: (460,720)
        clip.with_effects([vfx.Resize(0.6)]) # width and height multiplied by 0.6
        clip.with_effects([vfx.Resize(width=800)]) # height computed automatically.
        clip.with_effects([vfx.Resize(lambda t : 1+0.02*t)]) # slow clip swelling
    """
    new_size: Union[tuple, float, callable] = ...
    height: int = ...
    width: int = ...
    apply_to_mask: bool = ...
    def resizer(self, pic, new_size): # -> NDArray[Any]:
        """Resize the image using PIL."""
        ...
    
    def apply(self, clip): # -> Any | Clip:
        """Apply the effect to the clip."""
        ...
    


